---
# Credits

- name: Install sqlite
  ansible.builtin.dnf:
    name: sqlite
    state: present
  when: ansible_distribution == 'Rocky'

- name: Create Pihole container path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole"
    state: directory
  when: ansible_distribution == 'Rocky'

- name: Create unbound path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/etc-unbound/unbound.conf.d"
    state: directory
  when: ansible_distribution == 'Rocky'

- name: Create etc-pihole path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/etc-pihole"
    state: directory
  when: ansible_distribution == 'Rocky'

- name: Create etc-lighttpd path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/etc-lighttpd"
    state: directory
  when: ansible_distribution == 'Rocky'

- name: Create etc-dnsmasq.d path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/etc-dnsmasq.d"
    state: directory
  when: ansible_distribution == 'Rocky'

- name: Fix Systemd DNS resolver
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: "DNSStubListener="
    line: DNSStubListener=no
  when: ansible_distribution == 'Rocky'

- name: Disable Systemd resolved Service
  ansible.builtin.systemd:
    name: systemd-resolved.service
    enabled: no
  when: ansible_distribution == 'Rocky'

- name: Unbound configuration
  ansible.builtin.template:
    src: unbound_pihole.j2
    dest: "/home/{{ user_name }}/pihole/etc-unbound/unbound.conf"
    owner: root
    group: root
    mode: "0644"
  when: ansible_distribution == 'Rocky'

- name: Download root hints
  get_url:
    url: https://www.internic.net/domain/named.root
    dest: "/home/{{ user_name }}/pihole/etc-unbound/root.hints"
  when: ansible_distribution == 'Rocky'

- name: External Config
  ansible.builtin.template:
    src: external.j2
    dest: "/home/{{ user_name }}/pihole/etc-lighttpd/external.conf"
  when: ansible_distribution == 'Rocky'

- name: sysctl Config
  ansible.builtin.template:
    src: 01_sysctl.j2
    dest: "/etc/sysctl.d/01_sysctl.conf"
  when: ansible_distribution == 'Rocky'

- name: Copy pem file
  ansible.builtin.copy:
    src: "/etc/letsencrypt/live/{{ ssl_cert }}/cert_privkey_combined.pem"
    dest: "/home/{{ user_name }}/pihole/etc-lighttpd/cert_privkey_combined.pem"
  when: ansible_distribution == 'Rocky'

- name: Pihole Config
  ansible.builtin.template:
    src: setup_vars.j2
    dest: /home/{{ user_name }}/pihole/etc-pihole/setupVars.conf
  when: ansible_distribution == 'Rocky'

- name: Create Pihole DB backups path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/database_backups"
    state: directory
  when: ansible_distribution == 'Rocky'

- name: Backup Database Script
  ansible.builtin.template:
    src: backup_db.j2
    dest: "/usr/local/bin/backup_pihole_db.sh"
    owner: root
    group: root
    mode: "0644"
  when: ansible_distribution == 'Rocky'

- name: Backup Pihole Daily
  ansible.builtin.cron:
    name: "Backup Pihole DB"
    special_time: daily
    job: /bin/bash /usr/local/bin/backup_pihole_db.sh
  when: ansible_distribution == 'Rocky'

- name: Custom Domains
  ansible.builtin.lineinfile:
    path: "/home/{{ user_name }}/pihole/etc-pihole/custom.list"
    line: "{{ item }}"
    create: "yes"
  loop: "{{ domains_list }}"
  when: ansible_distribution == 'Rocky'

- name: Pihole Pod file
  ansible.builtin.template:
    src: pihole.yml.j2
    dest: "/home/{{ user_name }}/kubernetes/pihole.yml"
  when: ansible_distribution == 'Rocky'

- name: Pihole Service
  ansible.builtin.template:
    src: pihole.service.j2
    dest: "/etc/systemd/system/pihole.service"
  when: ansible_distribution == 'Rocky'

- name: Enable Pihole
  ansible.builtin.systemd:
    name: pihole.service
    enabled: yes
  when: ansible_distribution == 'Rocky'
