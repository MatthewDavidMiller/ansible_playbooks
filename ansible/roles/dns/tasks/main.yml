---
# Credits

- name: Install rclone
  community.general.rpm_ostree_pkg:
    name: rclone
    state: present
  when: ansible_facts['os_family'] == 'RedHat'

- name: Install sqlite
  community.general.rpm_ostree_pkg:
    name: sqlite
    state: present
  when: ansible_facts['os_family'] == 'RedHat'

- name: Install cronie
  community.general.rpm_ostree_pkg:
    name: cronie
    state: present
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create Pihole container path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create unbound path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/etc-unbound/unbound.conf.d"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create etc-pihole path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/etc-pihole"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create etc-lighttpd path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/etc-lighttpd"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Rclone config path
  ansible.builtin.file:
    path: "/root/.config/rclone"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Unbound configuration
  ansible.builtin.template:
    src: unbound_pihole.j2
    dest: "/home/{{ user_name }}/pihole/etc-unbound/unbound.conf"
    owner: root
    group: root
    mode: "0644"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Download root hints
  get_url:
    url: https://www.internic.net/domain/named.root
    dest: "/home/{{ user_name }}/pihole/etc-unbound/root.hints"
  when: ansible_facts['os_family'] == 'RedHat'

- name: External Config
  ansible.builtin.template:
    src: external.j2
    dest: "/home/{{ user_name }}/pihole/etc-lighttpd/external.conf"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Copy pem file
  ansible.builtin.copy:
    src: "/etc/letsencrypt/live/{{ ssl_cert }}/cert_privkey_combined.pem"
    dest: "/home/{{ user_name }}/pihole/etc-lighttpd/cert_privkey_combined.pem"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Pihole Config
  ansible.builtin.template:
    src: setup_vars.j2
    dest: /home/{{ user_name }}/pihole/etc-pihole/setupVars.conf
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create pihole container network
  ansible.builtin.shell:
    cmd: |
      podman network create --subnet 172.16.1.0/29 pihole_net
  when: ansible_facts['os_family'] == 'RedHat'

- name: Pihole Service
  ansible.builtin.template:
    src: pihole.service.j2
    dest: "/etc/systemd/system/pihole.service"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Unbound Service
  ansible.builtin.template:
    src: unbound_container.service.j2
    dest: "/etc/systemd/system/unbound_container.service"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Enable unbound
  ansible.builtin.systemd:
    name: unbound_container.service
    enabled: yes
  when: ansible_facts['os_family'] == 'RedHat'

- name: Enable Pihole
  ansible.builtin.systemd:
    name: pihole.service
    enabled: yes
  when: ansible_facts['os_family'] == 'RedHat'

- name: Enable cron
  ansible.builtin.systemd:
    name: crond.service
    enabled: yes
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create Pihole DB backups path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/database_backups"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Backup Database Script
  ansible.builtin.template:
    src: backup_db.j2
    dest: "/usr/local/bin/backup_db.sh"
    owner: root
    group: root
    mode: "0644"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Backup Pihole Daily
  ansible.builtin.cron:
    name: "Backup Pihole DB"
    special_time: daily
    job: /bin/bash /usr/local/bin/backup_db.sh
  when: ansible_facts['os_family'] == 'RedHat'

- name: Rclone config file
  ansible.builtin.template:
    src: rclone_config.j2
    dest: "/root/.config/rclone/rclone.conf"
    owner: root
    group: root
    mode: "0644"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Custom Domains
  ansible.builtin.lineinfile:
    path: "/home/{{ user_name }}/pihole/etc-pihole/custom.list"
    line: "{{ item }}"
    create: "yes"
  loop: "{{ domains_list }}"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Forward dns to container tcp
  ansible.posix.firewalld:
    zone: homelab
    rich_rule: rule family=ipv4 source address={{ network_prefix }}  destination address=172.16.1.2 forward-port protocol=tcp port=53 to-port=53
    permanent: yes
    state: enabled
  when: ansible_facts['os_family'] == 'RedHat'

- name: Forward dns to container udp
  ansible.posix.firewalld:
    zone: homelab
    rich_rule: rule family=ipv4 source address={{ network_prefix }}  destination address=172.16.1.2 forward-port protocol=udp port=53 to-port=53
    permanent: yes
    state: enabled
  when: ansible_facts['os_family'] == 'RedHat'

- name: Forward http to container
  ansible.posix.firewalld:
    zone: homelab
    rich_rule: rule family=ipv4 source address={{ network_prefix }}  destination address=172.16.1.2 forward-port protocol=tcp port=80 to-port=80
    permanent: yes
    state: enabled
  when: ansible_facts['os_family'] == 'RedHat'

- name: Forward https to container
  ansible.posix.firewalld:
    zone: homelab
    rich_rule: rule family=ipv4 source address={{ network_prefix }}  destination address=172.16.1.2 forward-port protocol=tcp port=443 to-port=443
    permanent: yes
    state: enabled
  when: ansible_facts['os_family'] == 'RedHat'
