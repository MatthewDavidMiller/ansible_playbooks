# Credits
# https://stackoverflow.com/questions/36059804/ansible-store-commands-stdout-in-new-variable
# https://github.com/SchemaStore/schemastore/issues/1397
# https://serverfault.com/questions/952498/ansible-multiline-results-and-loop

---
- name: Get the Linux headers output
  ansible.builtin.shell: "uname -r"
  register: linux_headers_command

- name: Get the Linux headers name
  ansible.builtin.set_fact:
    linux_headers: "{{ linux_headers_command.stdout }}"

- name: Install Linux Headers
  apt:
    name: "linux-headers-{{ linux_headers }}"
    state: latest

- name: Add backports repository
  ansible.builtin.blockinfile:
    path: "/etc/apt/sources.list"
    marker: "{mark}"
    marker_begin: "# Backports Repoitories"
    marker_end: "#=================================================================================================================="
    block: |
      deb https://mirrors.wikimedia.org/debian/ {{ release_name }}-backports main
      deb-src https://mirrors.wikimedia.org/debian/ {{ release_name }}-backports main

- name: Install Wireguard
  apt:
    name: wireguard
    state: latest
    default_release: "{{ release_name }}-backports"

- name: Reboot machine before proceeding
  reboot:
    reboot_timeout: "3600"

- name: Create Wireguard Interface
  ansible.builtin.shell: "ip link add dev {{ wireguard_interface }} type wireguard"

- name: Set Wireguard Ip address
  ansible.builtin.shell: "ip address add dev {{ wireguard_interface }} {{ wireguard_server_ip_address }}/24"

- name: Activate Wireguard Interface
  ansible.builtin.shell: "ip link set up dev {{ wireguard_interface }}"

- name: Create wireguard key path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/.wireguard_keys"
    state: directory
    owner: "{{ user_name }}"
    mode: "0700"

- name: Create Wireguard Server Keys
  ansible.builtin.shell: "wg genkey | tee \u0022/home/{{ user_name }}/.wireguard_keys/wireguard_server\u0022 | wg pubkey >  \u0022/home/{{ user_name }}/.wireguard_keys/wireguard_server.pub\u0022"

- name: Create Wireguard Client Keys
  ansible.builtin.shell: "wg genkey | tee \u0022/home/{{ user_name }}/.wireguard_keys/{{ item }}\u0022 | wg pubkey >  \u0022/home/{{ user_name }}/.wireguard_keys/{{ item }}.pub\u0022"
  loop: "{{ wireguard_users }}"

- name: Get the Wireguard Server key output
  ansible.builtin.shell: "cat \u0022/home/{{ user_name }}/.wireguard_keys/wireguard_server\u0022"
  register: private_key_command

- name: Get the Wireguard Server key name
  ansible.builtin.set_fact:
    private_key: "{{ private_key_command.stdout }}"

- name: Get the Wireguard Public Server key output
  ansible.builtin.shell: "cat \u0022/home/{{ user_name }}/.wireguard_keys/wireguard_server.pub\u0022"
  register: public_key_command

- name: Get the Wireguard Public Server key content
  ansible.builtin.set_fact:
    public_key: "{{ public_key_command.stdout }}"

- name: Get the Wireguard Client keys output
  ansible.builtin.shell: "cat \u0022/home/{{ user_name }}/.wireguard_keys/{{ item }}\u0022"
  register: private_client_keys_command
  loop: "{{ wireguard_users }}"

- name: Get the Wireguard Client keys content
  ansible.builtin.set_fact:
    client_private_keys: []

- name: Get the Wireguard Client keys content stripped to stdout_lines
  ansible.builtin.set_fact:
    client_private_keys: "{{ client_private_keys + item.stdout_lines }}"
  loop: "{{ private_client_keys_command.results }}"

- name: Get the Wireguard Client Public keys output
  ansible.builtin.shell: "cat \u0022/home/{{ user_name }}/.wireguard_keys/{{ item }}\u0022"
  register: public_client_keys_command
  loop: "{{ wireguard_users }}"

- name: Get the Wireguard Client public keys content
  ansible.builtin.set_fact:
    client_public_keys: []

- name: Get the Wireguard Client public keys content stripped to stdout_lines
  ansible.builtin.set_fact:
    client_public_keys: "{{ client_public_keys + item.stdout_lines }}"
  loop: "{{ public_client_keys_command.results }}"

- name: Wireguard Server Config
  ansible.builtin.template:
    src: wireguard_server_config.j2
    dest: "/etc/wireguard/{{ wireguard_interface }}.conf"

- name: Add Wireguard Peers
  ansible.builtin.blockinfile:
    path: "/etc/wireguard/{{ wireguard_interface }}.conf"
    block: |
      [Peer]
      PublicKey = {{ item.1 }}
      AllowedIPs = {{ item.3 }}/32
    marker: "{mark}"
    marker_begin: "# User {{ item.0 }}"
    marker_end: "#=================================================================================================================="
  loop: "{{ wireguard_users|zip(client_public_keys, client_private_keys, user_ip_addresses)|list}}"

- name: Create Wireguard Client Configs Folder
  ansible.builtin.file:
    path: "/home/{{ user_name }}/.wireguard_client_configs"
    state: directory

- name: Wireguard Client Config
  ansible.builtin.template:
    src: wireguard_client_config.j2
    dest: "/home/{{ user_name }}/.wireguard_client_configs/{{ item.0 }}.conf"
  loop: "{{ wireguard_users|zip(client_public_keys, client_private_keys, user_ip_addresses)|list}}"

- name: DDClient Config
  ansible.builtin.template:
    src: ddclient_config.j2
    dest: "/etc/ddclient.conf"

- name: Start and enable wireguard service
  ansible.builtin.systemd:
    name: "wg-quick@{{ wireguard_interface }}"
    state: started
    enabled: "yes"
