# Credits
# https://stackoverflow.com/questions/36059804/ansible-store-commands-stdout-in-new-variable
# https://github.com/SchemaStore/schemastore/issues/1397

---
- name: Install Wireguard
  apt:
    name: wireguard
    state: latest
    default_release: "{{ release_name }}-backports"

- name: Create Wiregurad Interface
  ansible.builtin.shell: "ip link add dev {{ interface_name }} type wireguard"

- name: Set Wiregurad Ip address
  ansible.builtin.shell: "ip address add dev {{ interface_name }} {{ ip_address }}/24"

- name: Activate Wiregurad Interface
  ansible.builtin.shell: "ip link set up dev {{ interface_name }}"

- name: Create wireguard key path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/.wireguard_keys"
    state: directory
    owner: "{{ user_name }}"
    mode: "0700"

- name: Create Wireguard Server Keys
  ansible.builtin.shell: "wg genkey | tee \u0022/home/{{ user_name }}/.wireguard_keys/wireguard_server\u0022 | wg pubkey >  \u0022/home/{{ user_name }}/.wireguard_keys/wireguard_server.pub\u0022"

- name: Create Wireguard Client Keys
  ansible.builtin.shell: "wg genkey | tee \u0022/home/{{ user_name }}/.wireguard_keys/{{ item }}\u0022 | wg pubkey >  \u0022/home/{{ user_name }}/.wireguard_keys/{{ item }}.pub\u0022"
  loop: "{{ wireguard_users }}"

- name: Get the Wiregruard Server key output
  ansible.builtin.shell: "$(cat \u0022/home/{{ user_name }}/.wireguard_keys/wireguard_server\u0022)"
  register: private_key_command

- name: Get the Wiregruard Server key name
  ansible.builtin.set_fact:
    private_key: "{{ private_key_command.stdout }}"

- name: Get the Wiregruard Public Server key output
  ansible.builtin.shell: "$(cat \u0022/home/{{ user_name }}/.wireguard_keys/wireguard_server.pub\u0022)"
  register: public_key_command

- name: Get the Wiregruard Public Server key content
  ansible.builtin.set_fact:
    public_key: "{{ public_key_command.stdout }}"

- name: Get the Wiregruard Client keys output
  ansible.builtin.shell: "$(cat \u0022/home/{{ user_name }}/.wireguard_keys/{{ item }}\u0022)"
  register: private_client_keys_command
  loop: "{{ wireguard_users }}"

- name: Get the Wiregruard Client keys name
  ansible.builtin.set_fact:
    client_private_keys: "{{ item.stdout }}"
  loop: "{{ private_client_keys_command }}"

- name: Get the Wiregruard Client Public keys output
  ansible.builtin.shell: "$(cat \u0022/home/{{ user_name }}/.wireguard_keys/{{ item }}\u0022)"
  register: public_client_keys_command
  loop: "{{ wireguard_users }}"

- name: Get the Wiregruard Client Public keys name
  ansible.builtin.set_fact:
    client_public_keys: "{{ item.stdout }}"
  loop: "{{ public_client_keys_command }}"

- name: Wireguard Server Config
  ansible.builtin.template:
    src: wireguard_server_config.j2
    dest: "/etc/wireguard/{{ interface_name }}.conf"

- name: Add Wireguard Peers
  ansible.builtin.blockinfile:
    path: "/etc/wireguard/{{ interface_name }}.conf"
    block: |
      [Peer]
      PublicKey = {{ item.1 }}
      AllowedIPs = {{ item.3 }}/32
    marker: "{mark}"
    marker_begin: "# User {{ item.0 }}"
    marker_end: "#=================================================================================================================="
  loop: "{{ wireguard_users|zip(client_public_keys, client_private_keys, user_ip_addresses)|list}}"

- name: Wireguard Client Config
  ansible.builtin.template:
    src: wireguard_client_config.j2
    dest: "/home/{{ user_name }}/.wireguard_client_configs/{{ item.0 }}.conf"
  loop: "{{ wireguard_users|zip(client_public_keys, client_private_keys, user_ip_addresses)|list}}"

- name: Start and enable wireguard service
  ansible.builtin.systemd:
    name: "wg-quick@{{ interface_name }}"
    state: started
    enabled: "yes"
