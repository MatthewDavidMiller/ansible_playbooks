---
- name: Install nextcloud packages
  apt:
    name: "{{ nextcloud_packages }}"
    state: latest
    update_cache: "yes"
  when: ansible_facts['os_family'] == 'Debian'

- name: Check if occ file exists
  ansible.builtin.stat:
    path: /var/www/nextcloud/occ
  register: nextcloud_status
  when: ansible_facts['os_family'] == 'Debian'

- name: Download nextcloud
  get_url:
    url: https://download.nextcloud.com/server/releases/{{ nextcloud_file }}
    dest: /tmp
    checksum: sha256:{{ nextcloud_checksum }}
  when:
    - ansible_facts['os_family'] == 'Debian'
    - nextcloud_status.stat.exists == false

- name: Create www folder
  ansible.builtin.file:
    path: "/var/www/"
    state: directory
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Extract nextcloud zip folder
  ansible.builtin.unarchive:
    src: /tmp/{{ nextcloud_file }}
    dest: /var/www
    remote_src: yes
  when:
    - ansible_facts['os_family'] == 'Debian'
    - nextcloud_status.stat.exists == false

- name: Apache nextcloud config
  ansible.builtin.template:
    src: apache_nextcloud.j2
    dest: /etc/apache2/sites-available/nextcloud.conf
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Enable Apache nextcloud config
  ansible.builtin.shell:
    cmd: |
      a2ensite nextcloud.conf
      a2enmod rewrite
      a2enmod headers
      a2enmod env
      a2enmod dir
      a2enmod mime
      a2enmod ssl
      a2ensite default-ssl
      service apache2 restart
  when:
    - ansible_facts['os_family'] == 'Debian'
    - nextcloud_status.stat.exists == false

- name: Install nextcloud
  ansible.builtin.shell:
    cmd: |
      cd /var/www/nextcloud/
      php occ  maintenance:install --database "mysql" --database-name "nextcloud"  --database-user "root" --database-pass "{{ nextcloud_db_root_password }}" --admin-user "admin" --admin-pass "{{ nextcloud_db_admin_password }}"
  when:
    - ansible_facts['os_family'] == 'Debian'
    - nextcloud_status.stat.exists == false

- name: Set nextcloud folder owner
  ansible.builtin.file:
    path: "/var/www/nextcloud/"
    state: directory
    recurse: yes
    owner: "www-data"
    group: "www-data"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow http
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "80"
    source: "{{ network_prefix }}"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow http ipv6
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "80"
    source: "fe80::/10"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
    ip_version: ipv6
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow https
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "443"
    source: "{{ network_prefix }}"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow https ipv6
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "443"
    source: "fe80::/10"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
    ip_version: ipv6
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Save Iptables Rules
  community.general.iptables_state:
    ip_version: ipv4
    table: filter
    state: saved
    path: /etc/iptables/rules.v4
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Save Iptables Rules ipv6
  community.general.iptables_state:
    ip_version: ipv6
    table: filter
    state: saved
    path: /etc/iptables/rules.v6
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Set PHP CLI Memory Limit
  ansible.builtin.lineinfile:
    path: /etc/php/7.3/cli/php.ini
    regexp: "^memory_limit = "
    line: memory_limit = 512M
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Set PHP Apache Memory Limit
  ansible.builtin.lineinfile:
    path: /etc/php/7.3/apache2/php.ini
    regexp: "^memory_limit = "
    line: memory_limit = 512M
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Copy ssl cert
  ansible.builtin.copy:
    src: "/etc/letsencrypt/live/{{ ssl_cert }}/fullchain.pem"
    dest: /etc/ssl/certs/fullchain.pem
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Copy ssl key
  ansible.builtin.copy:
    src: "/etc/letsencrypt/live/{{ ssl_cert }}/privkey.key"
    dest: /etc/ssl/private/privkey.key
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Set ssl cert
  ansible.builtin.lineinfile:
    path: /etc/apache2/sites-enabled/default-ssl.conf
    regexp: "^SSLCertificateFile "
    line: SSLCertificateFile /etc/ssl/certs/fullchain.pem
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Set ssl key
  ansible.builtin.lineinfile:
    path: /etc/apache2/sites-enabled/default-ssl.conf
    regexp: "^SSLCertificateKeyFile "
    line: SSLCertificateKeyFile /etc/ssl/private/privkey.key
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Install ransomware protection app
  ansible.builtin.shell:
    cmd: |
      php /var/www/nextcloud/occ app:install ransomware_protection
  become_user: www-data
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Install contacts app
  ansible.builtin.shell:
    cmd: |
      php /var/www/nextcloud/occ app:install contacts
  become_user: www-data
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Enable external files app
  ansible.builtin.shell:
    cmd: |
      php /var/www/nextcloud/occ app:enable files_external
  become_user: www-data
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Update Nextcloud
  ansible.builtin.shell:
    cmd: |
      php /var/www/nextcloud/updater/updater.phar --no-interaction
  become_user: www-data
  when:
    - ansible_facts['os_family'] == 'Debian'
