---
- name: Mount storage for Nextcloud
  ansible.posix.mount:
    path: "/home/{{ user_name }}/nextcloud/data"
    src: "{{ nextcloud_storage }}"
    boot: yes
    opts: rw,nofail
    state: mounted
    fstype: ext4
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create nextcloud and postgres container network
  ansible.builtin.shell:
    cmd: |
      podman network create --subnet 172.16.1.8/29 --disable-dns nextcloud_postgres_net
  ignore_errors: true
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create postgres database container path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/postgres"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create Nextcloud base container path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/nextcloud/base"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create Nextcloud data container path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/nextcloud/data"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create Nextcloud config container path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/nextcloud/config"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: Create Nextcloud apps container path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/nextcloud/apps"
    state: directory
  when: ansible_facts['os_family'] == 'RedHat'

- name: postgres Service
  ansible.builtin.template:
    src: postgres_container.service.j2
    dest: "/etc/systemd/system/postgres_container.service"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Enable postgres
  ansible.builtin.systemd:
    name: postgres_container.service
    enabled: yes
  when: ansible_facts['os_family'] == 'RedHat'

- name: Nextcloud Service
  ansible.builtin.template:
    src: nextcloud_container.service.j2
    dest: "/etc/systemd/system/nextcloud_container.service"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Enable Nextcloud
  ansible.builtin.systemd:
    name: nextcloud_container.service
    enabled: yes
  when: ansible_facts['os_family'] == 'RedHat'

- name: Nextcloud script
  ansible.builtin.template:
    src: nextcloud_container.sh.j2
    dest: "/usr/local/bin/nextcloud_container.sh"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Postgres script
  ansible.builtin.template:
    src: postgres_container.sh.j2
    dest: "/usr/local/bin/postgres_container.sh"
  when: ansible_facts['os_family'] == 'RedHat'

- name: Update Nextcloud Container script
  ansible.builtin.template:
    src: update_nextcloud_container.sh.j2
    dest: "/usr/local/bin/update_nextcloud_container.sh"
  when: ansible_facts['os_family'] == 'RedHat'
