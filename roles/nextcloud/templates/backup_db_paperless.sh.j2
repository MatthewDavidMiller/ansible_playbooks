#!/bin/bash

# === Configuration ===
PAPERLESS_REMOTE="Nextcloud:{{ paperless_backup_location }}"
NEXTCLOUD_REMOTE="Nextcloud:{{ nextcloud_backup_location }}"
THRESHOLD=30
timestamp=$(date +%Y_%m_%d)

# === Dump Paperless DB to root ===
/usr/bin/podman exec postgres pg_dump -U {{ paperless_database_user }} {{ paperless_database_name }} \
  > "/paperless_db_${timestamp}.sql"

# === Dump Nextcloud DB to root ===
/usr/bin/podman exec postgres pg_dump -U {{ nextcloud_database_user }} {{ nextcloud_database_name }} \
  > "/nextcloud_db_${timestamp}.sql"

# === Rclone Paperless DB ===
/usr/bin/rclone copy "/paperless_db_${timestamp}.sql" ${PAPERLESS_REMOTE} \
  --log-level INFO --log-file /var/log/rclone-paperless-db.log

# === Rclone Nextcloud DB ===
/usr/bin/rclone copy "/nextcloud_db_${timestamp}.sql" ${NEXTCLOUD_REMOTE} \
  --log-level INFO --log-file /var/log/rclone-nextcloud-db.log

# === Export Paperless Documents ===
/usr/bin/podman exec paperless document_exporter /usr/src/paperless/export
cd {{ paperless_export_path }} || exit 1

# === Zip & Push Paperless Document Export ===
/usr/bin/zip -r "paperless_export_${timestamp}.zip" ./ > /var/log/zip-paperless-docs.log
/usr/bin/rclone copy "paperless_export_${timestamp}.zip" ${PAPERLESS_REMOTE} \
  --log-level INFO --log-file /var/log/rclone-paperless-docs.log

# === Cleanup ===
if [ $? -eq 0 ]; then
    /usr/bin/rm "paperless_export_${timestamp}.zip"
    /usr/bin/rm "/paperless_db_${timestamp}.sql"
    /usr/bin/rm "/nextcloud_db_${timestamp}.sql"
else
    echo "Upload failed. Backup ZIP and SQL files retained." >&2
fi

# === Function to check and delete old backups ===
cleanup_backups() {
    REMOTE_PATH="$1"
    LABEL="$2"
    LOG_FILE="/var/log/rclone-${LABEL}-cleanup.log"

    echo "Checking backup count for $LABEL..."

    # Count files in remote directory
    BACKUP_COUNT=$(rclone lsjson "$REMOTE_PATH" | jq '. | length') || {
      echo "Error reading backup count for $LABEL" >&2
      return 1
    }

    if [ "$BACKUP_COUNT" -ge "$THRESHOLD" ]; then
        echo "$BACKUP_COUNT backups found in $LABEL — proceeding with deletion."
        /usr/bin/rclone delete "$REMOTE_PATH" --min-age 30d --log-file "$LOG_FILE" --log-level INFO
    else
        echo "Cleanup skipped for $LABEL — only $BACKUP_COUNT backups found (less than $THRESHOLD)."
    fi
}

# === Run cleanup for each remote backup location ===
cleanup_backups "$PAPERLESS_REMOTE" "paperless"
cleanup_backups "$NEXTCLOUD_REMOTE" "nextcloud"
