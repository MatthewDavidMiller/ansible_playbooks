---
- name: Install firewalld
  ansible.builtin.apt:
    name: firewalld
    state: present
  when: ansible_facts['distribution'] == 'Debian'

- name: Set default action for public to drop
  ansible.posix.firewalld:
    zone: public
    target: DROP
    permanent: yes
    state: present
  when: ansible_facts['distribution'] == 'Debian'

- name: Create new zone and set it to drop
  ansible.posix.firewalld:
    zone: homelab
    permanent: yes
    state: present
  when: ansible_facts['distribution'] == 'Debian'

- name: Set zone to drop
  ansible.posix.firewalld:
    zone: homelab
    target: DROP
    permanent: yes
    state: present
  when: ansible_facts['distribution'] == 'Debian'

- name: Set management source for zone
  ansible.posix.firewalld:
    zone: homelab
    source: "{{ management_network }}"
    permanent: yes
    state: enabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Set ansible source for zone
  ansible.posix.firewalld:
    zone: homelab
    source: "{{ ip_ansible }}"
    permanent: yes
    state: enabled
  when:
    - ansible_facts['distribution'] == 'Debian'
    - ip_ansible is defined

- name: Enable icmp block inversion
  ansible.posix.firewalld:
    zone: homelab
    icmp_block_inversion: yes
    permanent: yes
    state: enabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Allow SSH
  ansible.posix.firewalld:
    zone: homelab
    service: ssh
    permanent: yes
    state: enabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Allow icmp
  ansible.posix.firewalld:
    zone: homelab
    icmp_block: echo-request
    permanent: yes
    state: enabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Disable SSH in default zone
  ansible.posix.firewalld:
    zone: public
    service: ssh
    permanent: yes
    state: disabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Disable SSH in default zone 2
  ansible.posix.firewalld:
    zone: public
    port: 22/tcp
    permanent: yes
    state: disabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Disable cockpit in default zone
  ansible.posix.firewalld:
    zone: public
    service: cockpit
    permanent: yes
    state: disabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Disable dhcpv6-client in default zone
  ansible.posix.firewalld:
    zone: public
    service: dhcpv6-client
    permanent: yes
    state: disabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Disable mdns in default zone
  ansible.posix.firewalld:
    zone: public
    service: mdns
    permanent: yes
    state: disabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Set interface for public zone
  ansible.posix.firewalld:
    zone: public
    interface: "{{ default_interface }}"
    permanent: yes
    state: enabled
  when: ansible_facts['distribution'] == 'Debian'

- name: Enable firewalld
  ansible.builtin.systemd:
    name: firewalld.service
    enabled: yes
  when: ansible_facts['distribution'] == 'Debian'
